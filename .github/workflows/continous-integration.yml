on: [push, pull_request]

name: Continuous integration

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - nightly
        arch:
          - i686-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.arch }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.arch }} --release

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: --target ${{ matrix.arch }}

      - name: Run clippy
        if: matrix.toolchain == 'stable'
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: clippy
          args: --target ${{ matrix.arch }} -- -D warnings

      - name: Archive Build Artifact
        uses: actions/upload-artifact@v1
        with:
          name: sptcloud-${{ matrix.arch }}
          path: target/${{ matrix.arch }}/release/sptcloud

  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      matrix:
        toolchain:
          - nightly
        arch:
          - i686-pc-windows-msvc
          - x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.arch }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.arch }} --release

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: --target ${{ matrix.arch }}

      - name: Run clippy
        if: matrix.toolchain == 'stable'
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: clippy
          args: --target ${{ matrix.arch }} -- -D warnings
          
      - name: Archive Build Artifact
        uses: actions/upload-artifact@v1
        with:
          name: sptcloud-${{ matrix.arch }}
          path: target/${{ matrix.arch }}/release/sptcloud.exe

  macos:
    name: macOS
    runs-on: macos-latest
    strategy:
      matrix:
        toolchain:
          - nightly
        arch:
          - x86_64-apple-darwin
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.arch }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ matrix.arch }} --release

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: test
          args: --target ${{ matrix.arch }}

      - name: Run clippy
        if: matrix.toolchain == 'stable'
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: clippy
          args: --target ${{ matrix.arch }} -- -D warnings
          
      - name: Archive Build Artifact
        uses: actions/upload-artifact@v1
        with:
          name: sptcloud-${{ matrix.arch }}
          path: target/${{ matrix.arch }}/release/sptcloud

  create-release:
    if: github.ref == 'refs/heads/master'
    name: Create Release
    needs: [linux, macos, windows]
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  upload-assets:
    if: github.ref == 'refs/heads/master'
    name: Upload Release Asset
    needs: [linux, macos, windows, create-release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - i686-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          - i686-pc-windows-msvc
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
    steps:
      - name: Load Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Release Upload URL
        id: get_release_info
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
        env:
          TAG_REF_NAME: ${{ github.ref }}
          REPOSITORY_NAME: ${{ github.repository }}
      - name: Download build artifact
        uses: actions/download-artifact@v1
        with:
          name: sptcloud-${{ matrix.arch }}
          path: artifact/
      - name: List files
        run: file artifact && ls artifact/
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: artifact/sptcloud-${{ matrix.arch }}
          asset_name: ${{ matrix.arch }}.zip
          asset_content_type: application/zip
